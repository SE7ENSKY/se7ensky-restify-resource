// Generated by CoffeeScript 1.4.0
var restify;

restify = require('restify');

module.exports = function(server, log, resourcesPath) {
  var currentConfiguringControllerActions, currentConfiguringControllerName, currentConfiguringControllerPath, registerControllerMethod;
  if (resourcesPath == null) {
    resourcesPath = 'resources';
  }
  currentConfiguringControllerName = null;
  currentConfiguringControllerPath = null;
  currentConfiguringControllerActions = [];
  registerControllerMethod = function(verb, relativeUri, handler) {
    var fullUri;
    if (handler == null) {
      handler = null;
    }
    if (handler === null) {
      handler = relativeUri;
      relativeUri = '/';
    }
    fullUri = "" + currentConfiguringControllerPath + "/" + relativeUri;
    currentConfiguringControllerActions.push("" + verb + " " + relativeUri);
    return server[verb](fullUri, function(req, res, next) {
      return handler.call({
        req: req,
        res: res,
        next: next,
        respond: function(err, o) {
          if (err) {
            log.error(err, "Error handling request");
            return next(err);
          } else if (o) {
            log.info(o, "Successfully handled request");
            return res.send(o);
          } else {
            err = new restify.ResourceNotFoundError("Object not found");
            log.error(err);
            return next(err);
          }
        }
      });
    });
  };
  global.GET = function(relativeUri, handler) {
    if (handler == null) {
      handler = null;
    }
    return registerControllerMethod('get', relativeUri, handler);
  };
  global.POST = function(relativeUri, handler) {
    if (handler == null) {
      handler = null;
    }
    return registerControllerMethod('post', relativeUri, handler);
  };
  global.HEAD = function(relativeUri, handler) {
    if (handler == null) {
      handler = null;
    }
    return registerControllerMethod('head', relativeUri, handler);
  };
  global.PUT = function(relativeUri, handler) {
    if (handler == null) {
      handler = null;
    }
    return registerControllerMethod('put', relativeUri, handler);
  };
  global.DELETE = function(relativeUri, handler) {
    if (handler == null) {
      handler = null;
    }
    return registerControllerMethod('del', relativeUri, handler);
  };
  return server.resource = function(name, path) {
    if (path == null) {
      path = null;
    }
    if (path === null) {
      path = "/" + name;
    }
    currentConfiguringControllerName = name;
    currentConfiguringControllerPath = path;
    log.info({
      controller: name,
      path: path
    }, "Configuring controller");
    require("" + resourcesPath + "/" + name);
    log.info({
      controller: name,
      path: path,
      actions: currentConfiguringControllerActions
    }, "Controller configured successfully");
    currentConfiguringControllerName = null;
    currentConfiguringControllerPath = null;
    return currentConfiguringControllerActions = [];
  };
};
